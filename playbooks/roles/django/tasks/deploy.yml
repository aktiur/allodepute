- name: ensure env file is up to date
  template:
    src: env.j2
    dest: "{{ django_env_file }}"
    mode: 0600
    owner: "{{ django_user }}"
    group: "{{ django_group }}"
  notify:
    - restart django

- name: apply database migrations
  command: "{{ django_run_manage }} migrate --noinput"
  become: true
  become_user: "{{ django_user }}"
  register: migrations
  changed_when: "'No migrations to apply.' not in migrations.stdout"

- name: collect staticfiles
  command: "{{ django_run_manage }} collectstatic --noinput"
  args:
  register: collectstatic
  changed_when: not (collectstatic.stdout is search("\\b0 static files copied"))

- name: ensure uwsgi config directory exists
  file:
    path: "/etc/uwsgi/apps-available"
    state: directory

- name: copy uwsgi config files
  template:
    src: django.ini.j2
    dest: /etc/uwsgi/apps-available/{{ django_app_name }}-django.ini
  notify:
    - restart django

- name: install uwsgi logrotate files
  template:
    src: logrotate.j2
    dest: "/etc/logrotate.d/django"

- name: install uwsgi service files
  template:
    src: django.service.j2
    dest: /etc/systemd/system/{{ django_app_name }}-django.service
  notify:
    - reload systemd

- name: ensure the uwsgi services are enabled and started
  service:
    name: "{{ django_app_name }}-django"
    enabled: yes
    state: started

- name: ensure nginx host configuration is present
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/sites-available/01-{{ django_app_name }}-django.conf
  notify:
    - reload nginx
  vars:
    main_domain: "{{ django_domain }}"
    redirect_domains: "{{ django_redirect_domains|default(omit) }}"
  when: django_nginx_conf

- name: ensure nginx host configuration is enabled
  file:
    path: /etc/nginx/sites-enabled/01-{{ django_app_name }}-django.conf
    src: ../sites-available/01-{{ django_app_name }}-django.conf
    state: link
  notify:
    - reload nginx
  when: django_nginx_conf
